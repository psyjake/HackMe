<?xml version="1.0" ?>
<SNAPSHOT profile="SQA" timestamp="Tue, 17 Dec 2019 20:46:20 GMT" version="1.8">
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.CyclomaticComplexityMetric">
    <VALUE measured="hackme.MainTest.setUp()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.correctCharacters(String,String)" value="6.0"/>
    <VALUE measured="hackme.screens.GameScreenController.initialize(URL,ResourceBundle)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.getWordFileScanner(Difficulty)" value="6.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testCorrectChars()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.getPassword(List&lt;String&gt;)" value="2.0"/>
    <VALUE measured="hackme.screens.EndScreenController.saveScoreboard(ArrayList&lt;String[]&gt;,String)" value="3.0"/>
    <VALUE measured="hackme.screens.StartScreenController.mediumLevelButtonClicked(ActionEvent)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testNumberOfWords()" value="5.0"/>
    <VALUE measured="hackme.gamelogic.RandomString.RandomString(int,Random)" value="2.0"/>
    <VALUE measured="hackme.Main.gameScreenReturn(String)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testSizeOfWords()" value="3.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.testGetScoreboard()" value="13.0"/>
    <VALUE measured="hackme.gamelogic.RandomString.RandomString(int)" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenController.getScoreboard(String)" value="3.0"/>
    <VALUE measured="hackme.screens.GameScreenController.initialiseGame(Difficulty)" value="5.0"/>
    <VALUE measured="hackme.gamelogic.RandomString.nextString()" value="2.0"/>
    <VALUE measured="hackme.Main.start(Stage)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.getWordList(Difficulty)" value="3.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.setupGame(Difficulty)" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenController.setResult(String)" value="2.0"/>
    <VALUE measured="hackme.screens.EndScreenController.playAgainButtonClicked(ActionEvent)" value="1.0"/>
    <VALUE measured="hackme.screens.GameScreenController.wordOnClick(String)" value="5.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.setUp()" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenController.insertIntoScoreboard(String,int,ArrayList&lt;String[]&gt;)" value="5.0"/>
    <VALUE measured="hackme.screens.EndScreenController.exitButtonClicked(ActionEvent)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testGetPassword()" value="1.0"/>
    <VALUE measured="hackme.MainTest.tearDown()" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.testSaveScoreboard()" value="3.0"/>
    <VALUE measured="hackme.Main.loadStartScreen()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomStringTest.setUp()" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenController.easyLevelButtonClicked(ActionEvent)" value="1.0"/>
    <VALUE measured="hackme.MainTest.testMain()" value="2.0"/>
    <VALUE measured="hackme.screens.StartScreenController.exitButtonClicked(ActionEvent)" value="1.0"/>
    <VALUE measured="hackme.Main.startScreenReturn(String)" value="6.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.tearDown()" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenController.hardLevelButtonClicked(ActionEvent)" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.testInsertIntoScoreboard()" value="13.0"/>
    <VALUE measured="hackme.Main.main(String[])" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomStringTest.tearDown()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomStringTest.testNextString()" value="2.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.matchPassword(String,String)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testMatchPassword()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.createDisplayableWords(List&lt;String&gt;,EventHandler&lt;ActionEvent&gt;)" value="2.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.setUp()" value="4.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.tearDown()" value="1.0"/>
    <VALUE measured="hackme.Main.endScreenReturn(String)" value="3.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.NestingDepthMetric">
    <VALUE measured="hackme.MainTest.setUp()" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.correctCharacters(String,String)" value="2.0"/>
    <VALUE measured="hackme.screens.GameScreenController.initialize(URL,ResourceBundle)" value="2.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.getWordFileScanner(Difficulty)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testCorrectChars()" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.getPassword(List&lt;String&gt;)" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenController.saveScoreboard(ArrayList&lt;String[]&gt;,String)" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenController.mediumLevelButtonClicked(ActionEvent)" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testNumberOfWords()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomString.RandomString(int,Random)" value="0.0"/>
    <VALUE measured="hackme.Main.gameScreenReturn(String)" value="2.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testSizeOfWords()" value="2.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.testGetScoreboard()" value="3.0"/>
    <VALUE measured="hackme.gamelogic.RandomString.RandomString(int)" value="0.0"/>
    <VALUE measured="hackme.screens.EndScreenController.getScoreboard(String)" value="1.0"/>
    <VALUE measured="hackme.screens.GameScreenController.initialiseGame(Difficulty)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomString.nextString()" value="0.0"/>
    <VALUE measured="hackme.Main.start(Stage)" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.getWordList(Difficulty)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.setupGame(Difficulty)" value="0.0"/>
    <VALUE measured="hackme.screens.EndScreenController.setResult(String)" value="0.0"/>
    <VALUE measured="hackme.screens.EndScreenController.playAgainButtonClicked(ActionEvent)" value="0.0"/>
    <VALUE measured="hackme.screens.GameScreenController.wordOnClick(String)" value="3.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.setUp()" value="0.0"/>
    <VALUE measured="hackme.screens.EndScreenController.insertIntoScoreboard(String,int,ArrayList&lt;String[]&gt;)" value="2.0"/>
    <VALUE measured="hackme.screens.EndScreenController.exitButtonClicked(ActionEvent)" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testGetPassword()" value="0.0"/>
    <VALUE measured="hackme.MainTest.tearDown()" value="0.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.testSaveScoreboard()" value="1.0"/>
    <VALUE measured="hackme.Main.loadStartScreen()" value="2.0"/>
    <VALUE measured="hackme.gamelogic.RandomStringTest.setUp()" value="0.0"/>
    <VALUE measured="hackme.screens.StartScreenController.easyLevelButtonClicked(ActionEvent)" value="0.0"/>
    <VALUE measured="hackme.MainTest.testMain()" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenController.exitButtonClicked(ActionEvent)" value="0.0"/>
    <VALUE measured="hackme.Main.startScreenReturn(String)" value="3.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.tearDown()" value="0.0"/>
    <VALUE measured="hackme.screens.StartScreenController.hardLevelButtonClicked(ActionEvent)" value="0.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.testInsertIntoScoreboard()" value="3.0"/>
    <VALUE measured="hackme.Main.main(String[])" value="0.0"/>
    <VALUE measured="hackme.gamelogic.RandomStringTest.tearDown()" value="0.0"/>
    <VALUE measured="hackme.gamelogic.RandomStringTest.testNextString()" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.matchPassword(String,String)" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.testMatchPassword()" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.createDisplayableWords(List&lt;String&gt;,EventHandler&lt;ActionEvent&gt;)" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest.setUp()" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest.tearDown()" value="0.0"/>
    <VALUE measured="hackme.Main.endScreenReturn(String)" value="0.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.classMetrics.CommentRatioClassMetric">
    <VALUE measured="hackme.gamelogic.RandomStringTest" value="0.0"/>
    <VALUE measured="hackme.screens.GameScreenController" value="0.1717171717171717"/>
    <VALUE measured="hackme.gamelogic.RandomString" value="0.41935483870967744"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest" value="0.021739130434782608"/>
    <VALUE measured="hackme.screens.EndScreenController" value="0.2980769230769231"/>
    <VALUE measured="hackme.Main" value="0.3627450980392157"/>
    <VALUE measured="hackme.gamelogic.GameEngine.Difficulty" value="0.5"/>
    <VALUE measured="hackme.screens.GameScreenControllerTest" value="0.75"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest" value="0.0"/>
    <VALUE measured="hackme.screens.StartScreenControllerTest" value="0.75"/>
    <VALUE measured="hackme.MainTest" value="0.0"/>
    <VALUE measured="hackme.screens.StartScreenController" value="0.6052631578947368"/>
    <VALUE measured="hackme.gamelogic.GameEngine" value="0.3709677419354839"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.classMetrics.DepthOfInheritanceMetric">
    <VALUE measured="hackme.gamelogic.RandomStringTest" value="1.0"/>
    <VALUE measured="hackme.screens.GameScreenController" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomString" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenController" value="1.0"/>
    <VALUE measured="hackme.Main" value="2.0"/>
    <VALUE measured="hackme.screens.GameScreenControllerTest" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenControllerTest" value="1.0"/>
    <VALUE measured="hackme.MainTest" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenController" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine" value="1.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.classMetrics.LinesOfCodeClassMetric">
    <VALUE measured="hackme.gamelogic.RandomStringTest" value="20.0"/>
    <VALUE measured="hackme.screens.GameScreenController" value="99.0"/>
    <VALUE measured="hackme.gamelogic.RandomString" value="31.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest" value="92.0"/>
    <VALUE measured="hackme.screens.EndScreenController" value="104.0"/>
    <VALUE measured="hackme.Main" value="102.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.Difficulty" value="6.0"/>
    <VALUE measured="hackme.screens.GameScreenControllerTest" value="4.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest" value="79.0"/>
    <VALUE measured="hackme.screens.StartScreenControllerTest" value="4.0"/>
    <VALUE measured="hackme.MainTest" value="18.0"/>
    <VALUE measured="hackme.screens.StartScreenController" value="38.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine" value="124.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.classMetrics.LackOfCohesionOfMethodsClassMetric">
    <VALUE measured="hackme.gamelogic.RandomStringTest" value="1.0"/>
    <VALUE measured="hackme.screens.GameScreenController" value="1.0"/>
    <VALUE measured="hackme.gamelogic.RandomString" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenControllerTest" value="1.0"/>
    <VALUE measured="hackme.screens.EndScreenController" value="5.0"/>
    <VALUE measured="hackme.Main" value="2.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine.Difficulty" value="0.0"/>
    <VALUE measured="hackme.screens.GameScreenControllerTest" value="0.0"/>
    <VALUE measured="hackme.gamelogic.GameEngineTest" value="1.0"/>
    <VALUE measured="hackme.screens.StartScreenControllerTest" value="0.0"/>
    <VALUE measured="hackme.MainTest" value="2.0"/>
    <VALUE measured="hackme.screens.StartScreenController" value="1.0"/>
    <VALUE measured="hackme.gamelogic.GameEngine" value="4.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.interfaceMetrics.LinesOfCodeInterfaceMetric">
    <VALUE measured="hackme.screens.ScreenReturner" value="6.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.AfferentCouplingMetric">
    <VALUE measured="hackme.screens" value="5.0"/>
    <VALUE measured="hackme" value="1.0"/>
    <VALUE measured="hackme.gamelogic" value="8.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.EfferentCouplingMetric">
    <VALUE measured="hackme.screens" value="5.0"/>
    <VALUE measured="hackme" value="3.0"/>
    <VALUE measured="hackme.gamelogic" value="3.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.InstabilityMetric">
    <VALUE measured="hackme.screens" value="0.5"/>
    <VALUE measured="hackme" value="0.75"/>
    <VALUE measured="hackme.gamelogic" value="0.375"/>
  </METRIC>
</SNAPSHOT>